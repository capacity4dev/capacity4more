<?php

/**
 * @file
 * Install, update and uninstall functions.
 *
 * Install, update and uninstall functions for the
 * capacity4more installation profile.
 */

/**
 * Implements hook_install().
 */
function capacity4more_install() {
  /*
   * Fixes problems when the CSV files used for importing have been created
   * on a Mac, by forcing PHP to detect the appropriate line endings.
   */
  ini_set('auto_detect_line_endings', TRUE);

  // TEXT FORMATS.
  $filtered_html_format = _capacity4more_install_get_filtered_html_format();
  filter_format_save($filtered_html_format);
  $full_html_format = _capacity4more_install_get_full_html_format();
  filter_format_save($full_html_format);

  // C4M WYSIWYG.
  // We need to enable the c4m_wysiwyg_ckeditor module here.
  // Because if we enable it in the profile info file, the module's install file
  // will be executed before the text formats are added in this install profile,
  // and so the actions in the module's install file won't be executed.
  /* @todo Find a better solution so we don't need to enable it here */
  module_enable(array('c4m_wysiwyg_ckeditor'));

  // ROLES & PERMISSIONS.
  _capacity4more_install_save_default_permissions();

  // MENU.
  _capacity4more_install_save_default_menu();
  _capacity4more_install_add_default_pages();
  menu_rebuild();

  // THEMES.
  $theme_default = variable_get('theme_default', 'bootstrap');

  $theme_admin = 'seven';
  _capacity4more_install_save_theme($theme_admin, 1);
  variable_set('admin_theme', $theme_admin);
  variable_set('node_admin_theme', TRUE);

  // Custom theme (subtheme of bootstrap).
  $theme_capacity4more = 'kapablo';
  _capacity4more_install_save_theme($theme_capacity4more, 1);
  variable_set('theme_default', $theme_capacity4more);
  // Disable Bartik.
  _capacity4more_install_save_theme($theme_default, 0);

  // BLOCKS.
  $admin_blocks = _capacity4more_install_get_admin_theme_blocks($theme_admin);
  _capacity4more_install_save_theme_blocks($admin_blocks);

  $capacity4more_blocks = _capacity4more_install_get_capacity4more_theme_blocks(
    $theme_capacity4more
  );
  _capacity4more_install_save_theme_blocks($capacity4more_blocks);

  _capacity4more_install_set_default_date_formats();

  // DATE & DATE FORMAT.
  date_default_timezone_set('Europe/Brussels');
  variable_set('date_default_timezone', 'Europe/Brussels');
  variable_set('date_first_day', 1);
  _capacity4more_install_set_default_date_formats();

  // Quick post debug, Disabled by default.
  variable_set('c4m_quick_post_debug', 0);

  // Set default mail messages.
  _capacity4more_install_set_default_mail_messages();

  // Add lazyloader settings.
  _capacity4more_add_lazyloader_settings();

  // Path aliases.
  variable_set('pathauto_update_action', '2');
}

/******************************************************************************
 * TEXT FORMATS (Default filters)
 ******************************************************************************/

/**
 * Get the filtered_html format.
 *
 * @return stdCLass
 *   An object structered text format.
 */
function _capacity4more_install_get_filtered_html_format() {
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Wysiwyg filter.
      'wysiwyg' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;

  return $filtered_html_format;
}

/**
 * Get the full_html format.
 *
 * @return stdCLass
 *   An object structered text format.
 */
function _capacity4more_install_get_full_html_format() {
  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;

  return $full_html_format;
}

/******************************************************************************
 * ROLES & PERMISSIONS
 ******************************************************************************/

/**
 * Save the default permissions.
 */
function _capacity4more_install_save_default_permissions() {
  // Visitors can register accounts.
  variable_set('user_register', 1);

  // Create a default role for site administrators,
  // with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);

  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
}

/******************************************************************************
 * MENU
 ******************************************************************************/

/**
 * Set the default minimum menu items.
 */
function _capacity4more_install_save_default_menu() {
  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
    'weight' => 0,
  );
  menu_link_save($item);
}

/**
 * Adds empty default pages.
 */
function _capacity4more_install_add_default_pages() {
  $pages = array(
    'learning' => array(
      'title' => 'The Learning Space',
      'menu' => 'main-menu',
      'menu_title' => 'Learning',
      'weight' => 5,
    ),
    'about' => array(
      'title' => 'About Us',
      'menu' => 'main-menu',
      'menu_title' => 'About Us',
      'weight' => 8,
    ),
    'newsletters' => array(
      'title' => 'Newsletters',
      'menu' => NULL,
      'menu_title' => NULL,
      'weight' => NULL,
    ),
  );

  foreach ($pages as $path => $item) {
    _capacity4more_install_create_page_node(
      'book',
      $item['title'],
      $path,
      $item['menu'],
      $item['menu_title'],
      $item['weight']
    );
  }
}

/**
 * Programmatically create a node and attach to a menu (if provided).
 *
 * @param string $type
 *   Content bundle type.
 * @param string $title
 *   Node title.
 * @param string|null $path
 *   Optionally: Path alias.
 * @param srtring|null $menu
 *   Optionally: Menu to attach node to.
 * @param string $menu_title
 *   Optionally: Title in the menu.
 * @param int $weight
 *   Optionally: Weight in the menu.
 */
function _capacity4more_install_create_page_node(
  $type,
  $title,
  $path = NULL,
  $menu = NULL,
  $menu_title = '',
  $weight = 0
) {
  $values = array(
    'type' => $type,
    'status' => 1,
    'comment' => 0,
    'promote' => 0,
    'uid' => 1,
  );

  if ($path) {
    $values['path'] = array(
      'alias' => $path,
      'pathauto' => FALSE,
    );
  }

  if ($menu) {
    if (!$menu_title) {
      $menu_title = $title;
    }

    $values['menu'] = array(
      'link_title' => $menu_title,
      'menu_name' => $menu,
      'plid' => 0,
      'enabled' => 1,
      'weight' => $weight,
    );
  }

  $node = entity_create('node', $values);
  $entity = entity_metadata_wrapper('node', $node);

  $entity->title->set($title);
  $entity->save();
}

/******************************************************************************
 * THEMES
 ******************************************************************************/

/**
 * Save the the given theme status in the system table.
 *
 * @param string $name
 *   The theme name.
 * @param int $status
 *   The disabled (0) or enabled (1) status of the theme.
 */
function _capacity4more_install_save_theme($name, $status) {
  db_update('system')
    ->fields(array('status' => (int) $status))
    ->condition('type', 'theme')
    ->condition('name', $name)
    ->execute();
}

/******************************************************************************
 * BLOCKS
 ******************************************************************************/

/**
 * Add an array of blocks to the given theme.
 *
 * @param array $blocks
 *   Array of blocks.
 */
function _capacity4more_install_save_theme_blocks(array $blocks) {
  $query = db_insert('block')->fields(
    array(
      'module',
      'delta',
      'theme',
      'status',
      'weight',
      'region',
      'pages',
      'cache',
    )
  );

  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();
}

/**
 * Get the default theme blocks.
 *
 * @param string $theme
 *   The name of the theme.
 *
 * @return array
 *   Array of the default theme blocks.
 */
function _capacity4more_install_get_default_theme_blocks($theme) {
  // Only content & help blocks.
  // All other blocks are set trough features & context.
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );

  return $blocks;
}

/**
 * Get the default theme blocks.
 *
 * @param string $theme
 *   The name of the theme.
 *
 * @return array
 *   Array of the default admin theme blocks.
 */
function _capacity4more_install_get_admin_theme_blocks($theme) {
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
  );

  return $blocks;
}

/**
 * Get the capacity4more theme blocks.
 *
 * @param string $theme
 *   The name of the theme.
 *
 * @return array
 *   Array of the c4m theme blocks.
 */
function _capacity4more_install_get_capacity4more_theme_blocks($theme) {
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );

  return $blocks;
}

/**
 * Set the default time formats.
 *
 * @return array
 *   Array with success message.
 */
function _capacity4more_install_set_default_date_formats() {
  $formats = array(
    // Default.
    'long' => 'l, j F, Y - H:i',
    'medium' => 'D, d/m/Y - H:i',
    'short' => 'd/m/Y - H:i',

    // Reldate module.
    'day' => 'l, j M',
    'time' => 'H:i',
    'month_after' => 'H:i j M, Y',
    'month_within' => 'H:i D j M',
  );

  foreach ($formats as $type => $format) {
    variable_set('date_format_' . $type, $format);
  }

  return array(
    'success' => TRUE,
    'query' => st('Default date formats are set.'),
  );
}

/**
 * Sets default mail messages.
 */
function _capacity4more_install_set_default_mail_messages() {
  module_load_include('install', 'c4m_mail');
  c4m_mail_install_update_messages();
}

/**
 * Add lazyloader settings.
 */
function _capacity4more_add_lazyloader_settings() {
  variable_set('lazyloader_distance', '200');
  variable_set('lazyloader_enabled', 1);
  variable_set('lazyloader_exclude_option', 'exclude');
  variable_set('lazyloader_icon', '0');
  variable_set('lazyloader_paths', 'admin/*
api/*
media/*/format-form
media/ajax/*
media/browser*
node/*/edit
node/add/*
overlay-file/*');
  variable_set('lazyloader_placeholder', '');
}

/******************************************************************************
 * UPDATES GO HERE
 ******************************************************************************/

/**
 * Populate totals fields on users og_membership.
 */
function capacity4more_update_7001() {
  c4m_og_update_groups_contributions();
}

/**
 * Do not rebuild entities when cache is cleared.
 */
function capacity4more_update_7002() {
  variable_set('entity_rebuild_on_flush', FALSE);
}

/**
 * Enable current_search_links module.
 */
function capacity4more_update_7003() {
  module_enable(['current_search_links']);
}

/**
 * Disable eu_cookie_compliance module.
 */
function capacity4more_update_7004() {
  module_disable(['eu_cookie_compliance']);
}

/**
 * Enable lazyloader module.
 */
function capacity4more_update_7005() {
  module_enable(['lazyloader']);
  _capacity4more_add_lazyloader_settings();
}

/**
 * Adjust Lazyloader settings. Add api/*, mediabrowser and overlay-file/* paths.
 */
function capacity4more_update_7006() {
  _capacity4more_add_lazyloader_settings();
}

/**
 * Enable modules for calendar.
 */
function capacity4more_update_7007() {
  module_enable(['addtocal', 'calendar']);
}

/**
 * Enable modules for queue_ui.
 */
function capacity4more_update_7008() {
  module_enable(['queue_ui']);
}

/**
 * Adjust Lazyloader settings. Add media/ajax/* path.
 */
function capacity4more_update_7009() {
  _capacity4more_add_lazyloader_settings();
}

/**
 * Enable draggableviews module.
 */
function capacity4more_update_7010() {
  module_enable(['draggableviews']);
}

/**
 * Enable masquerade module.
 */
function capacity4more_update_7011() {
  module_enable(['masquerade']);
}

/**
 * Uninstall c4m_domain module.
 */
function capacity4more_update_7012() {
  module_disable(['c4m_domain']);
  drupal_uninstall_modules(['c4m_domain']);
}
