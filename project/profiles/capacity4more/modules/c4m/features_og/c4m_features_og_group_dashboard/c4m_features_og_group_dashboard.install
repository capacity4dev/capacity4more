<?php

/**
 * @file
 * Installation hooks for the Group Dashboard feature.
 */

/**
 * Implements hook_install().
 */
function c4m_features_og_group_dashboard_install() {
  if (module_exists('flag_actions')) {
    $flag = flag_get_flag('c4m_og_content_highlight');

    // Add custom flag action.
    if (!empty($flag)) {
      flag_actions_insert_action($flag->fid, 'flag', 1, 0, 'c4m_unflag_nodes_action', array());
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function c4m_features_og_group_dashboard_uninstall() {
  if (module_exists('flag_actions')) {
    $flag_actions = flag_actions_get_actions('c4m_og_content_highlight');

    // Remove highlight flag action.
    foreach ($flag_actions as $aid => $action) {
      if ($action->flag == 'c4m_og_content_highlight' &&
          $action->callback == 'c4m_unflag_nodes_action') {
        flag_actions_delete_action($aid);
      }
    }
  }
}

/**
 * Sets 'c4m_og_content_highlight' flag as global and aligns it's flagging.
 */
function c4m_features_og_group_dashboard_update_7001() {
  $flag = flag_get_flag('c4m_og_content_highlight');

  // Get all entities flagged with 'c4m_og_content_highlight'.
  $flagged_entities = flag_get_flag_flagging_data('c4m_og_content_highlight');

  $buckets = array();

  // Group the entities by group of content they belong to.
  foreach ($flagged_entities as $flagged_entity) {
    $entity = node_load($flagged_entity->entity_id);
    $entity_group = c4m_og_get_group_of_content($entity);

    if (empty($buckets[(string) $entity_group->nid])) {
      $buckets[(string) $entity_group->nid] = array($flagged_entity);
    }
    else {
      $buckets[(string) $entity_group->nid][] = $flagged_entity;
    }
  }

  $entities_to_flag = array();

  foreach ($buckets as $flagged_entities) {
    // Unflag all, and save the entity id with the highest flagging id.
    $last_flagged = NULL;
    foreach ($flagged_entities as $flagged_entity) {

      if (is_null($last_flagged)) {
        $last_flagged = $flagged_entity;
      }
      elseif ($flagged_entity->flagging_id > $last_flagged->flagging_id) {
        $last_flagged = $flagged_entity;
      }

      $flagger = user_load($flagged_entity->uid);
      $flag->flag('unflag', $flagged_entity->entity_id, $flagger, TRUE);
    }

    $entities_to_flag[] = $last_flagged->entity_id;
  }

  // Define 'c4m_og_content_highlight' flag as a global.
  $flag->global = TRUE;
  $flag->save();

  // Reflag the entities.
  foreach ($entities_to_flag as $entity_id) {
    $flag->flag('flag', $entity_id, NULL, TRUE);
  }
}

/**
 * Remove subscribe_c4m_follow_group for users no longer members of the group.
 */
function c4m_features_og_group_dashboard_update_7002() {
  db_query("DELETE f FROM {flagging} f 
INNER JOIN {flag} fl ON f.fid = fl.fid AND fl.name = 'subscribe_c4m_follow_group'
LEFT JOIN {og_membership} m ON f.entity_id = m.gid AND f.uid = m.etid AND f.entity_type = m.group_type AND m.entity_type = 'user'
WHERE m.gid IS NULL");
}

/**
 * Convert subscribe_c4m_follow_comment flag to subscribe_c4m_follow_content.
 */
function c4m_features_og_group_dashboard_update_7003() {
  $flag_follow_content = flag_get_flag('subscribe_c4m_follow_content');
  $flag_follow_comment = flag_get_flag('subscribe_c4m_follow_comment');
  db_query("UPDATE {flagging} f SET fid = @flag_follow_content WHERE fid = @flag_follow_comment", [
    '@flag_follow_content' => $flag_follow_content->fid,
    '@flag_follow_comment' => $flag_follow_comment->fid,
  ]);
}
