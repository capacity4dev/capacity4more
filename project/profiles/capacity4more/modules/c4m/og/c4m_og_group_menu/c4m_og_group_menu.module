<?php

/**
 * @file
 * Code for the C4M OG group menu feature.
 */

include_once 'c4m_og_group_menu.features.inc';

/**
 * Implements hook_block_view_alter().
 */
function c4m_og_group_menu_block_view_alter(&$data, $block) {

  if (!property_exists($block, 'context') || $block->context != 'c4m_context_og_menu') {
    // Not the desired context.
    return;
  }

  // Alter the menu <ul> wrapper to add the styling classes.
  $data['content']['#theme_wrappers'][0] = 'menu_tree__c4m_og_group_menu';

  $item = menu_get_item();

  foreach ($data['content'] as &$value) {
    if (!isset($value['#attributes']['class'])) {
      // Not a menu item.
      continue;
    }

    // Add the styling classes to the nav <li> items.
    $value['#attributes']['class'][] = 'og-menu-link';
    $value['#attributes']['class'][] = str_replace('/', '', $value['#href']);
    if ($value['#title'] == 'Home') {
      // Group home link.
      $value['#attributes']['class'][] = 'front';
      if ($item['path'] == 'node') {
        $value['#attributes']['class'][] = 'active';
      }
    }
  }
}

/**
 * Implements hook_og_ui_get_group_admin_alter().
 *
 * Prevents editing group menus. Allow only for projects.
 */
function og_group_menu_og_ui_get_group_admin_alter(&$data, $context) {
  // If we are in a project context, keep the link in place.
  $group = node_load($context['etid']);
  if ($group && $group->type == 'project') {
    return;
  }

  unset($data['menus']);
}

/**
 * Implements hook_menu_alter().
 *
 * Registers the function that grants or denied access to edit the og menu.
 */
function og_group_menu_menu_alter(&$items) {
  $items['group/%/%/admin/menus']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/add']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/%menu']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/%menu/add']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/%menu/edit']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/%menu/delete']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/%menu/item/%menu_link/edit']['access callback'] = 'c4m_og_group_menu_page_access';
  $items['group/%/%/admin/menus/%menu/item/%menu_link/delete']['access callback'] = 'c4m_og_group_menu_page_access';
}

/**
 * Allow access to the custom menu (og_menu) only under a project context.
 *
 * @see og_menu_access()
 *   For more details about the access checks.
 */
function c4m_og_group_menu_page_access() {
  if (!og_context_is_init()) {
    // OG context was not determined yet, so register the path and return early.
    // The next time this access callback will be called, it will not enter
    // here.
    og_context_access_callback_register_path($_GET['q']);
    return;
  }

  $gid = og_menu_get_context();
  $group = node_load($gid);
  if (!$group || $group->type != 'project') {
    return FALSE;
  }

  return og_menu_access('node', $gid);
}
