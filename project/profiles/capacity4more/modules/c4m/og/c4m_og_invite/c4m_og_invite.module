<?php

/**
 * Implements hook_menu_alter().
 */
function c4m_og_invite_menu_alter(&$items) {
  $items['group/%/%/admin/people/invite']['access callback'] = 'c4m_og_invite_user_access_group';
  $items['group/%/%/admin/people/invite-users']['access callback'] =
  $items['group/%/%/admin/people/invite-users/%user']['access callback'] =
  $items['group/%/%/admin/people/invite-users/autocomplete']['access callback'] = 'c4m_og_invite_access';
}

/**
 * Invitation access callback.
 */
function c4m_og_invite_access($group_type, $gid) {
  if (_og_invite_access($group_type, $gid)) {
    return check_access_by_group_type(NULL, $group_type, $gid);
  }
  return FALSE;
}

/**
 * Check if entity is a group, and user has permission - Access.
 */
function c4m_og_invite_user_access_group($perm, $group_type, $gid) {
  if (og_invite_people_user_access_group($perm, $group_type, $gid)) {
    return check_access_by_group_type($perm, $group_type, $gid);
  }
  return FALSE;
}

/*
 * Return true if the user is allowed to invite and false if he isn't.
 */
function check_access_by_group_type($perm, $group_type, $gid) {
  global $user;
  $og_roles = og_get_user_roles($group_type, $gid);
  if (in_array('administrator', $user->roles) || in_array('administrator member', $og_roles)) {
    // Global and Group administrators can invite.
    return TRUE;
  }
  // Get group.
  $group = entity_load_single($group_type, $gid);
  // Get request type (open/moderated).
  $membership_request_value = c4m_og_get_group_membership_request($group);
  // Get access type (public/private).
  $access_type = c4m_og_get_access_type($group);

  if ($access_type['type'] == 'private' || $membership_request_value == 'moderated') {
    // Group is either private, restricted - moderated or public - moderated.
    return FALSE;
  }
  return TRUE;
}
