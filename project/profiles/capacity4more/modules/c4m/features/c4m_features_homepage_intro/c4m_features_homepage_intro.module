<?php

/**
 * @file
 * Code for the Homepage Intro video feature.
 */

include_once 'c4m_features_homepage_intro.features.inc';

/**
 * Implements hook_menu().
 */
function c4m_features_homepage_intro_menu() {
  $items['admin/config/c4m/homepage-intro-video'] = array(
    'title' => 'Manage homepage intro video',
    'description' => 'Manage the settings related to the homepage intro video.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('c4m_features_homepage_intro_video_configure'),
    'access arguments' => array('administer site configuration'),
    'file' => 'c4m_features_homepage_intro.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function c4m_features_homepage_intro_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_block_info().
 */
function c4m_features_homepage_intro_block_info() {
  $blocks['video'] = array(
    'info' => t('Intro Video'),
  );
  $blocks['banner'] = array(
    'info' => t('Intro Banner'),
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function c4m_features_homepage_intro_block_configure($delta = '') {
  $callback = _c4m_features_homepage_intro_block_callback($delta, 'configure');
  if ($callback) {
    return $callback();
  }
}

/**
 * Implements hook_block_save().
 */
function c4m_features_homepage_intro_block_save($delta = '', $edit = array()) {
  $callback = _c4m_features_homepage_intro_block_callback($delta, 'save');
  if ($callback) {
    return $callback($edit);
  }
}

/**
 * Implements hook_block_view().
 */
function c4m_features_homepage_intro_block_view($delta = '') {
  $callback = _c4m_features_homepage_intro_block_callback($delta, 'view');
  if ($callback) {
    return $callback();
  }
}

/**
 * Helper to include the blocks include and to create the proper callback.
 *
 * @param string $delta
 *   The delta of the block.
 * @param string $type
 *   The block hook name (configure, save, view).
 *
 * @return false|string
 *   The callback name will only be returned if it exists.
 */
function _c4m_features_homepage_intro_block_callback($delta, $type) {
  module_load_include(
    'inc',
    'c4m_features_homepage_intro',
    'c4m_features_homepage_intro.blocks'
  );

  $callback = '_c4m_features_homepage_intro_' . $delta . '_' . $type;
  if (!function_exists($callback)) {
    return FALSE;
  }

  return $callback;
}

/**
 * Implements hook_theme().
 */
function c4m_features_homepage_intro_theme() {
  $theme['c4m_features_homepage_intro_video'] = array(
    'template' => 'video-overlay',
    'path' => drupal_get_path('module', 'c4m_features_homepage_intro') . '/templates',
    'variables' => array(
      'video_url' => NULL,
      'video_title' => NULL,
      'video_id' => NULL,
    ),
  );
  $theme['c4m_features_homepage_intro_banner'] = array(
    'template' => 'banner',
    'path' => drupal_get_path('module', 'c4m_features_homepage_intro') . '/templates',
    'variables' => array(),
  );

  return $theme;
}

/**
 * Helper function to extract the YouTube video ID from a YouTube video URL.
 *
 * @param string $youtube_video_url
 *   The YouTube video URL.
 *
 * @return string | boolean
 *   Returns the video ID or FALSE if it's not a match.
 */
function c4m_features_homepage_intro_extract_youtube_video_id($youtube_video_url) {
  // Extract the video ID from the URL.
  if (preg_match('/youtu.be\/([a-z1-9.-_]+)/', $youtube_video_url, $matches)) {
    return $matches[1];
  }
  elseif (preg_match("/youtube.com(.+)v=([^&]+)/", $youtube_video_url, $matches)) {
    return $matches[2];
  }

  return FALSE;
}

/**
 * Preprocess function for the video rendering.
 *
 * @param array $vars
 *   Template variables.
 */
function template_preprocess_c4m_features_homepage_intro_video(array &$vars) {
  // Image.
  $vars['image'] = array(
    '#theme'    => 'image',
    '#path'     => drupal_get_path('theme', 'kapablo') . '/images/header/homepage-fullheader.png',
  );

  // Video title fallback.
  if (empty($vars['video_title'])) {
    $vars['video_title'] = t('What is capacity4dev');
  }

  // Extract the video ID from the URL.
  $vars['video_id'] = c4m_features_homepage_intro_extract_youtube_video_id($vars['video_url']);

  // This JS will enable communication with YouTube's API.
  $path = drupal_get_path('module', 'c4m_features_homepage_intro');
  drupal_add_js($path . '/js/video_overlay.js');
}

/**
 * Preprocess function for the banner rendering.
 *
 * @param array $vars
 *   Template variables.
 */
function template_preprocess_c4m_features_homepage_intro_banner(array &$vars) {
  // Image.
  $vars['image'] = array(
    '#theme' => 'image',
    '#path'  => drupal_get_path('theme', 'kapablo') . '/images/header/homepage-user.png',
  );
}
