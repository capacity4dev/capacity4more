<?php

/**
 * @file
 * Code for the Photo content type feature.
 */

include_once 'c4m_content_photo.features.inc';

/**
 * Implements hook_theme_registry_alter().
 */
function c4m_content_photo_theme_registry_alter(&$theme_registry) {
  $theme_registry['node_gallery_api_item_navigator']['path'] = drupal_get_path('module', 'c4m_content_photo') . "/theme";
}

/**
 * Implements hook_c4m_helper_entity_metrics_info().
 */
function c4m_content_photo_c4m_helper_entity_metrics_info() {
  return array(
    'c4m_og_photos' => array(
      'type'      => 'photo',
      'context'   => 'group',
      'callback'  => 'c4m_og_group_node_metric',
      'arguments' => array(array('photo')),
      'weight'    => 2,
    ),
  );
}

/**
 * Implements hook_c4m_content_share_fields_info().
 */
function c4m_content_photo_c4m_content_share_fields_info() {
  return array(
    'photo' => array(
      'type',
    ),
  );
}

/**
 * Implements hook_c4m_helper_entity_label_info().
 */
function c4m_content_photo_c4m_helper_entity_label_info() {
  return array(
    'photo' => array(
      'article' => t('a'),
      'singular' => t('photo'),
      'plural' => t('photos'),
      'insert action' => t('uploaded a new photo'),
      'update action' => t('updated the photo'),
      'icon' => 'fa-file-picture-o',
    ),
  );
}


/**
 * Implements hook_preprocess().
 *
 * Create the back to photo album link.
 */
function c4m_content_photo_preprocess(&$variables, $hook) {
  if ($hook != 'node_gallery_api_item_navigator') {
    return;
  }

  global $base_path;
  $options = array(
    'absolute' => TRUE,
  );

  // 'gallery_link' contain the full path to the gallery (back button). This create duplication of the base path in
  // the link when creating it in the next line, so we strip the base path from the 'gallery_link'.
  $variables['gallery_link'] = str_replace($base_path, '', $variables['gallery_link']);

  // Create the link with absolute path.
  $variables['back_to_galley_link'] = l(t('Back to photo album'), $variables['gallery_link'], $options);
}
