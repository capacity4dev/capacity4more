<?php

/**
 * @file
 * Install & Update hooks.
 */

/**
 * Implements hook_install().
 */
function c4m_content_book_install() {
  // Set the pathauto for the content type trough the install hook.
  // It can then be overridden without interfere the feature settings.
  variable_set('pathauto_node_book_pattern', '[node:book:parents:join-path]/[node:title]');

  $book_types = variable_get('book_allowed_types', array());
  $key = array_search('book', $book_types);
  if (empty($key) && $key !== 0) {
    $book_types[] = 'book';
    variable_set('book_allowed_types', $book_types);
  }

  $book_child = variable_get('book_child_type', '');
  if (empty($book_child)) {
    $book_child = 'book';
    variable_set('book_child_type', $book_child);
  }

  // Delete the body field the book.module automatically adds.
  $instances = field_info_instances('node');
  if (!empty($instances['book']['body'])) {
    field_delete_instance($instances['book']['body']);
  }

  // Revert features (description override by book.module).
  features_revert(array('c4m_content_book' => array('node', 'field_instance')));
}

/**
 * Implements hook_uninstall().
 */
function c4m_content_book_uninstall() {
  $book_types = variable_get('book_allowed_types', array());
  $key = array_search('book', $book_types);
  if (!empty($key) || $key === 0) {
    unset($book_types[$key]);
    variable_set('book_allowed_types', $book_types);
  }

  $book_child = variable_get('book_child_type', '');
  if ($book_child == 'book') {
    variable_set('book_child_type', '');
  }
}
