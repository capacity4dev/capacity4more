<?php
/**
 * @file
 * Code for the Project content type feature.
 */

include_once 'c4m_content_project.features.inc';

/**
 * Implements hook_c4m_og_vocab_info_groups().
 */
function c4m_content_project_c4m_og_vocab_info_groups() {
  return array(
    'project' => array(
      'c4m_vocab_category',
      'c4m_vocab_tag',
    ),
  );
}

/**
 * Implements hook_c4m_content_statistics_info().
 *
 * @todo add c4m_status when it's available in the project content type
 */
function c4m_content_project_c4m_content_statistics_info() {
  return array(
    'global' => array(
      'c4m_projects' => array(
        'type'        => 'project',
        'entity_type' => 'node',
        'bundles'     => array('project'),
        'singular'    => 'Project',
        'plural'      => 'Projects',
        'state'       => 1,
        'aggregate'   => array(),
        'weight'      => -3,
        'attributes'  => array(
          'class' => array('projects'),
        ),
        'link' => array(
          'path' => 'projects',
        ),
      ),
    ),
    'topic' => array(
      'c4m_topic_projects' => array(
        'type'        => 'project',
        'entity_type' => 'node',
        'bundles'     => array('project'),
        'singular'    => 'Project',
        'plural'      => 'Projects',
        'state'       => 1,
        'aggregate'   => array(),
        'weight'      => 1,
        'attributes'  => array(
          'class' => array('topic-projects'),
        ),
        'link' => array(
          'path' => 'projects',
          'options' => array(
            'query' => array(
              'f' => array(
                'c4m_vocab_topic:@TOPIC_ID',
              ),
            ),
          ),
        ),
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function c4m_content_project_block_info() {
  $blocks = array();

  $blocks['c4m_block_create_project'] = array(
    'info' => t('Project: Create project'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function c4m_content_project_block_view($delta) {
  $module = 'c4m_content_project';

  module_load_include('inc', $module, $module . '.block');
  $callback = "_{$module}_block_" . $delta;
  if (function_exists($callback)) {
    return $callback();
  }

  return array();
}

/**
 * Implements hook_FORM_ID_form_alter().
 *
 * Alter the Project creation form.
 */
function c4m_og_form_project_node_form_alter(&$form, &$form_state) {
  // Form changes on creation.
  if (!$form['nid']['#value']) {
    // Change title.
    drupal_set_title('Request project');

    // Change submit button on creation.
    $form['actions']['submit']['#value'] = t('Request');
  }
}

/**
 * Implements hook_c4m_helper_entity_label_info().
 */
function c4m_content_project_c4m_helper_entity_label_info() {
  return array(
    'project' => array(
      'article' => t('a'),
      'singular' => t('project'),
      'plural' => t('projects'),
      'insert action' => t('created a new project'),
      'update action' => t('updated the project'),
      'icon' => 'fa-users',
    ),
  );
}
