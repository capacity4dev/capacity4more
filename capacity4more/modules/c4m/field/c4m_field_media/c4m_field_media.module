<?php
/**
 * @file
 * Code for the Media field feature.
 */

include_once 'c4m_field_media.features.inc';

/**
 * Implements hook_image_styles_alter().
 *
 * Override the default image presets.
 */
function c4m_field_media_image_styles_alter(&$styles) {
  $styles['thumbnail']['label'] = t('Thumbnail (60x60)');
  $styles['thumbnail']['effects'][0]['data']['width'] = 60;
  $styles['thumbnail']['effects'][0]['data']['height'] = 60;

  $styles['medium']['label'] = t('Medium (300x225)');
  $styles['medium']['effects'][0]['data']['width'] = 300;
  $styles['medium']['effects'][0]['data']['height'] = 225;

  $styles['large']['label'] = t('Large (620x465)');
  $styles['large']['effects'][0]['data']['width'] = 620;
  $styles['large']['effects'][0]['data']['height'] = 465;
}

/**
 * Implements hook_image_default_styles().
 */
function c4m_field_media_image_default_styles() {
  $styles = array();

  // Exported image style: c4m_image_medium.
  $styles['c4m_image_medium'] = array(
    'name' => 'c4m_image_medium',
    'label' => 'Featured images (300x225)',
    'effects' => array(
      1 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 300,
          'height' => 225,
        ),
        'weight' => 1,
      ),
    ),
  );

  // Exported image style: icon_small.
  $styles['icon_small'] = array(
    'name' => 'icon_small',
    'label' => 'Icon (30x30)',
    'effects' => array(
      1 => array(
        'label' => 'Scale',
        'help' => 'Scale will maintain the aspect-ratio of the original image.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 30,
          'height' => 30,
        ),
        'weight' => 1,
      ),
    ),
  );

  // Exported image style: small.
  $styles['small'] = array(
    'name' => 'small',
    'label' => 'Small (220x165)',
    'effects' => array(
      0 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 220,
          'height' => 165,
        ),
        'weight' => 0,
      ),
    ),
  );

  return $styles;
}
