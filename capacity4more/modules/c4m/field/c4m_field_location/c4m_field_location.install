<?php
/**
 * @file
 * Installation hooks for the C4M location field.
 */

/**
 * Implements hook_install().
 */
function c4m_field_location_install() {
  // Make sure that the marker cache is generated.
  c4m_field_location_generate_markers();
}

/**
 * Helper function to (re-)generate markers.
 *
 * This is just copy of code from getlocations module which we execute
 * regardless of being in cli mode or not.
 *
 * There is no reason why this should not work in cli.
 *
 * We need to do this in this way instead of calling function
 * getlocations_regenerate_markers() because this functions bails out if we
 * are running in cli.
 */
function c4m_field_location_generate_markers() {
  $icons = getlocations_get_icondata(TRUE);
  if ($icons) {
    $contents = '';

    $contents .= "// Getlocations marker image data.\n";
    $contents .= "Drupal.getlocations.iconpath = " . drupal_json_encode(base_path()) . ";\n";
    $contents .= "Drupal.getlocations.icondata = " . drupal_json_encode($icons) . ";\n";

    // Create the js/ within the files folder.
    $jspath = getlocations_get_markerfile(TRUE, FALSE);
    $jsfile = getlocations_get_markerfile(FALSE, FALSE);
    if ($jspath && $jsfile && file_prepare_directory($jspath, FILE_CREATE_DIRECTORY) && file_unmanaged_save_data($contents, $jsfile, FILE_EXISTS_REPLACE)) {
      // Also regenerate the cached marker titles array.
      getlocations_get_marker_titles(TRUE);
    }
    else {
      // Failed.
      watchdog('getlocations', 'Getlocations write error when saving the marker configuration to %filepath.', array('%filepath' => $jsfile), WATCHDOG_ERROR);
    }
  }
}
