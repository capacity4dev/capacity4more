<?php
/**
 * @file
 * Installation hooks for Language vocabulary.
 */

/**
 * Implements hook_install().
 */
function c4m_vocab_topic_install() {
  _c4m_vocab_topic_install_vocabulary();
}

/**
 * Implements hook_uninstall().
 */
function c4m_vocab_topic_uninstall() {
  $vocab = taxonomy_vocabulary_machine_name_load('c4m_vocab_topic');

  if (!empty($vocab)) {
    taxonomy_vocabulary_delete($vocab->vid);
  }
}


/**
 * Create Document type vocabulary.
 *
 * @return object
 *   The Document types vocabulary.
 */
function _c4m_vocab_topic_install_vocabulary() {
  $vocabulary = (object) array(
    'name'         => st('Topic'),
    'description'  => st('Topics and Sub-Topics'),
    'machine_name' => 'c4m_vocab_topic',
    'hierarchy'    => 1,
  );
  taxonomy_vocabulary_save($vocabulary);

  variable_set(
    'pathauto_taxonomy_term_c4m_vocab_topic_pattern',
    'topic/[term:name]'
  );

  return $vocabulary;
}

/**
 * Implements hook_schema().
 */
function c4m_vocab_topic_schema() {
  $schema = array();

  $schema['c4m_topic_mapping'] = array(
    'description' => 'The base table for the Email Domains entity',
    'fields' => array(
      'source' => array(
        'description' => 'The source (name) of the mapping.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'destination' => array(
        'description' => 'The destination (name) of the mapping.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'The destination TID of the mapping if it is known.',
        'type' => 'int',
        'length' => 10,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('tid'),
    'unique keys' => array(
      'destination' => array('destination'),
    ),
  );

  return $schema;
}
