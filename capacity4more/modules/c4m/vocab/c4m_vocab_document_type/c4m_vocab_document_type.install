<?php
/**
 * @file
 * Installation hooks for Language vocabulary.
 */

/**
 * Implements hook_install().
 */
function c4m_vocab_document_type_install() {
  $vocabulary = _c4m_vocab_document_type_install_vocabulary();
  $terms = _c4m_vocab_document_type_install_get_terms();
  _c4m_vocab_document_type_install_terms($vocabulary, $terms);
}

/**
 * Implements hook_uninstall().
 */
function c4m_vocab_document_type_uninstall() {
  $vocab = taxonomy_vocabulary_machine_name_load('c4m_vocab_document_type');

  if (!empty($vocab)) {
    taxonomy_vocabulary_delete($vocab->vid);
  }
}


/**
 * Create Document type vocabulary.
 *
 * @return object
 *   The Document types vocabulary.
 */
function _c4m_vocab_document_type_install_vocabulary() {
  $vocabulary = (object) array(
    'name'         => st('Type of Document'),
    'description'  => st('Type indication for documents'),
    'machine_name' => 'c4m_vocab_document_type',
  );
  taxonomy_vocabulary_save($vocabulary);

  variable_set(
    'pathauto_taxonomy_term_c4m_vocab_document_type_pattern',
    'document-type/[term:name]'
  );

  return $vocabulary;
}

/**
 * Create default taxonomy terms for the Document Type vocabulary.
 *
 * @param object $vocabulary
 *   The vocabulary to which the terms should be added.
 * @param array $terms
 *   Array of terms.
 * @param object $parent
 *   (optional) Parent term.
 */
function _c4m_vocab_document_type_install_terms($vocabulary, array $terms, $parent = NULL) {
  $weight = -20;
  foreach ($terms as $name => $children) {
    $term              = new stdClass();
    $term->name        = $name;
    $term->description = 'Document type ' . $name;
    $term->vid         = $vocabulary->vid;
    $term->weight      = $weight;
    if (!empty($parent)) {
      $term->parent = $parent->tid;
    }
    taxonomy_term_save($term);

    if (!empty($children)) {
      _c4m_vocab_document_type_install_terms($vocabulary, $children, $term);
    }
    $weight++;
  }
}

/**
 * Get a list of type of documents terms to use during the install.
 *
 * @return array
 *    List of type of documents.
 */
function _c4m_vocab_document_type_install_get_terms() {
  $terms = array(
    st('Study') => array(),
    st('Research Paper') => array(),
    st('Policy report / Briefing') => array(),
    st('Background material') => array(),
    st('Strategies & Action plans') => array(),
    st('Evaluation report') => array(),
    st('Monitorting report') => array(),
    st('Action document / Project fiche') => array(),
    st('Contractual documentation') => array(
      st('Contract') => array(),
      st('Terms of Reference') => array(),
      st('Technical Administrative Provisions') => array(),
      st('Budget') => array(),
      st('Logical framework') => array(),
    ),
    st('Learning material') => array(
      st('E-learning & MOOC') => array(),
      st('Training agenda & outlines') => array(),
      st('Training presentations') => array(),
    ),
    st('Guidelines') => array(),
    st('Toolkits & manuals') => array(),
    st('Case study & Lessons learned') => array(),
    st('Communication material') => array(
      st('Newsletter') => array(),
      st('Leaflets') => array(),
      st('Press release') => array(),
      st('Articles & Interviews') => array(),
      st('Publications & Factsheets') => array(),
      st('Picture') => array(),
      st('Video') => array(),
    ),
    st('EU official document') => array(),
    st('Other') => array(),
  );

  return $terms;
}
