<?php
/**
 * @file
 * Code for the Group Management feature.
 */

include_once 'c4m_features_og_manage.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function c4m_features_og_manage_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_menu().
 */
function c4m_features_og_manage_menu() {
  $items['manage/categories/%taxonomy_vocabulary_machine_name'] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('taxonomy_vocabulary', 2),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('c4m_taxonomy_overview_terms', 2),
    'access callback' => TRUE,
    'file' => 'c4m_manage_categories.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function c4m_features_og_manage_theme() {
  return array(
    'c4m_taxonomy_overview_terms' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Gets the group details.
 *
 * For the group management dashboard,
 * this function gets a specific information about the current group.
 *
 *
 * @return array|bool
 *  An array of the current group's info OR false if there's no group in current context.
 */
function c4m_features_og_manage_group_details() {
  $group = c4m_og_current_group();
  if (!$group) {
    return FALSE;
  }

  $wrapper = entity_metadata_wrapper('node', $group);

  // Info about the membership request field.
  $membership_field = field_info_field('field_membership_open_request');

  $details = array(
    'edit_link' => l(t('Edit'), url('node/' . $group->nid . '/edit', array('absolute' => TRUE))),
    'purl' => url($wrapper->value()->purl, array('absolute' => TRUE)),
    'title' => '<strong>' . $wrapper->label() . '</strong>',
    'description' => $wrapper->c4m_body->value(),
    'membership_open_request' => $membership_field['settings']['allowed_values'][$wrapper->field_membership_open_request->value()],
    'group_access' => c4m_og_get_access_type($group),
    'topics' => t('No Group Topics'),
    'locations' => t('No Group Regions & Countries'),
    'related_groups' => t('No Related Groups'),
    'related_projects' => t('No Related Projects'),
  );

  // List of related topics.
  if ($topics = $wrapper->c4m_related_topic->value()) {
    $topic_list = array(
      'title' => NULL,
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );
    foreach ($topics as $topic) {
      $options = array(
        'purl' => array(
          'disabled' => TRUE,
        ),
        'absolute' => TRUE,
        'query' => array(
          'f[0]' => 'c4m_related_topic:' . $topic->nid,
        )
      );
      $topic_list['items'][] = l($topic->title, url('search' , $options));
    }

    $details['topics'] = theme_item_list($topic_list);
  }

  // List of regions & countries.
  if ($geo = $wrapper->c4m_vocab_geo->value()) {
    $geo_list = array(
      'title' => NULL,
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );
    foreach ($geo as $location) {
      $options = array(
        'purl' => array(
          'disabled' => TRUE,
        ),
        'absolute' => TRUE,
        'query' => array(
          'f[0]' => 'c4m_vocab_geo:' . $location->tid,
        )
      );
      $geo_list['items'][] = l($location->name, url('search', $options));
    }

    $details['locations'] = theme_item_list($geo_list);
  }

  // List of related groups.
  if ($related_groups = $wrapper->c4m_related_group->value()) {
    $related_groups_list = array(
      'title' => NULL,
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );

    $url_options = array(
      'purl' => array(
        'disabled' => TRUE,
      ),
      'absolute' => TRUE
    );

    foreach ($related_groups as $related_group) {
      $access_type = c4m_og_get_access_type($related_group);
      $link_options = array(
        'attributes' => array(
          'class' => array(
            'access-title',
            $access_type['type'],
          ),
        ),
      );
      $related_groups_list['items'][] = l($related_group->title, url($related_group->purl, $url_options), $link_options);
    }

    $details['related_groups'] = theme_item_list($related_groups_list);
  }

  // List of related projects.
  if ($related_projects = $wrapper->c4m_related_projects->value()) {
    $related_projects_list = array(
      'title' => NULL,
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );

    $url_options = array(
      'purl' => array(
        'disabled' => TRUE,
      ),
      'absolute' => TRUE
    );

    foreach ($related_projects as $related_project) {
      $access_type = c4m_og_get_access_type($related_project);
      $link_options = array(
        'attributes' => array(
          'class' => array(
            'access-title',
            $access_type['type'],
          ),
        ),
      );
      $related_projects_list['items'][] = l($related_project->title, url($related_project->purl, $url_options), $link_options);
    }

    $details['related_projects'] = theme_item_list($related_projects_list);
  }
  
  // Get categories and terms count for current group.
  $og_vocab = c4m_restful_get_og_vocab_by_name('node', $group->nid, 'Categories');
  $details['taxonomy_manage_link'] = l(t('Edit'), url('manage/categories/' . $og_vocab[0]->machine_name, array('absolute' => TRUE)));
  $categories = taxonomy_get_tree($og_vocab[0]->vid);
  $categories_count = 0;
  $terms_count = 0;
  foreach ($categories as $category) {
    if ($category->parents[0]) {
      $terms_count++;
    }
    else {
      $categories_count++;
    }
  }
  $details['categories_count'] = $categories_count;
  $details['terms_count'] = $terms_count;

  return $details;
}

/**
 * Gets the group status and thumbnail.
 *
 * For the group management dashboard,
 * This function gets the current status of the group,
 * An archive link (If the group is not archived),
 * The number of the group membership requests which links to the "members" page (Filtered by pending)
 * and a thumbnail image of the group with an edit link.
 *
 * @return array|bool
 *  An array of current group's status and thumbnail image OR false if there's no group in current context.
 */
function c4m_features_og_manage_group_status_and_thumbnail() {
  $group = c4m_og_current_group();
  if (!$group) {
    return FALSE;
  }

  $wrapper = entity_metadata_wrapper('node', $group);

  // Pending memberships count link.
  $pending_memberships_count_text = t('@count Group membership requests', array(
      '@count' => c4m_og_get_members_count($group, OG_STATE_PENDING),
    )
  );
  $link_options = array(
    'absolute' => TRUE,
    'query' => array(
      'f[0]' => 'c4m_og_membership_type:' . $group->nid .'_pending',
    ),
  );
  $info = array(
    'status' => $wrapper->c4m_og_status->value(),
    'pending_members_link' => l($pending_memberships_count_text, url('members', $link_options)),
  );

  // Group thumbnail image with edit link.
  $file = $wrapper->c4m_media->value();
  if (!empty($file)) {
    $options = array(
      'html' => TRUE,
      'attributes' => array(
        'class' => array(
          'edit-thumbnail',
        ),
      ),
    );
    $edit_link['element'] = array(
      '#tag' => 'span',
      '#attributes' => array(
        'class' => array('edit-link'),
      ),
      '#value' => t('Edit'),
    );
    $file['style_name'] = 'medium';
    $file['path'] = $file['uri'];
    $file['attributes'] = array('class' => 'group-thumbnail');
    $info['thumbnail_image'] = l(theme_image_style($file) . theme_html_tag($edit_link), url('node/' . $group->nid . '/edit', array('absolute' => TRUE)), $options);
  }

  // Archive group link (If group is not archived already).
  $info['archive_link'] = $info['status'] != 'archived' ? l(t('Archive group'), url('node/' . $group->nid . '/edit', array('absolute' => TRUE))) : '';

  return $info;
}
