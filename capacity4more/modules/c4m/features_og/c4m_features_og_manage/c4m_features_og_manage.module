<?php
/**
 * @file
 * Code for the Group Management feature.
 */

include_once 'c4m_features_og_manage.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function c4m_features_og_manage_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Gets the group details.
 *
 * For the group management dashboard,
 * this function gets a specific information about the current group.
 *
 *
 * @return array|bool
 *  An array of the current group's info OR false if there's no group in current context.
 */
function c4m_features_og_manage_group_details() {
  $group = c4m_og_current_group();
  if (!$group) {
    return FALSE;
  }

  $wrapper = entity_metadata_wrapper('node', $group);

  $membership_field = field_info_field('field_membership_open_request');

  $details = array(
    'edit_link' => l(t('Edit'), url('node/' . $group->nid . '/edit', array('absolute' => TRUE))),
    'taxonomy_manage_link' => l(t('Edit'), url('group/node/' . $group->nid . '/admin/taxonomy', array('absolute' => TRUE))),
    'purl' => url($wrapper->value()->purl, array('absolute' => TRUE)),
    'title' => $wrapper->label(),
    'description' => $wrapper->c4m_body->value(),
    'membership_open_request' => $membership_field['settings']['allowed_values'][$wrapper->field_membership_open_request->value()],
    'group_access' => c4m_og_get_access_type($group),
    'topics' => '',
    'locations' => '',
    'related_groups' => '',
    'related_projects' => '',
  );

  if ($topics = $wrapper->c4m_related_topic->value()) {
    $topic_list = array(
      'title' => NULL,
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );
    foreach ($topics as $topic) {
      $options = array(
        'purl' => array(
          'disabled' => TRUE,
        ),
        'absolute' => TRUE,
        'query' => array(
          'f[0]' => 'c4m_related_topic:' . $topic->nid,
        )
      );
      $topic_list['items'][] = l($topic->title, url('search' , $options));
    }

    $details['topics'] = theme_item_list($topic_list);
  }

  if ($geo = $wrapper->c4m_vocab_geo->value()) {
    $geo_list = array(
      'title' => NULL,
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );
    foreach ($geo as $location) {
      $options = array(
        'purl' => array(
          'disabled' => TRUE,
        ),
        'absolute' => TRUE,
        'query' => array(
          'f[0]' => 'c4m_vocab_geo:' . $location->tid,
        )
      );
      $geo_list['items'][] = l($location->name, url('search', $options));
    }

    $details['locations'] = theme_item_list($geo_list);
  }

  if ($related_groups = $wrapper->c4m_related_group->value()) {
    $related_groups_list = array(
      'title' => '',
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );

    $options = array(
      'purl' => array(
        'disabled' => TRUE,
      ),
      'absolute' => TRUE
    );

    foreach ($related_groups as $related_group) {
      $related_groups_list['items'][] = l($related_group->title, url('node/' . $related_group->nid, $options));
    }

    $details['related_groups'] = theme_item_list($related_groups_list);
  }

  if ($related_projects = $wrapper->c4m_related_projects->value()) {
    $related_projects_list = array(
      'title' => '',
      'type' => 'ul',
      'items' => array(),
      'attributes' => array(),
    );

    $options = array(
      'purl' => array(
        'disabled' => TRUE,
      ),
      'absolute' => TRUE
    );

    foreach ($related_projects as $related_project) {
      $related_projects_list['items'][] = l($related_project->title, url('node/' . $related_project->nid, $options));
    }

    $details['related_projects'] = theme_item_list($related_projects_list);
  }

  $handler = restful_get_restful_handler('categories');
  $request = array(
    'group' => $group->nid,
  );
  $categories = $handler->get('', $request);
  $details['categories_count'] = count($categories);

  $handler = restful_get_restful_handler('tags');
  $request = array(
    'group' => $group->nid,
  );
  $tags = $handler->get('', $request);
  $details['tags_count'] = count($tags);

  return $details;
}
