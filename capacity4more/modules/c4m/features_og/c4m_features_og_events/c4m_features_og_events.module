<?php
/**
 * @file
 * Code for the Events feature.
 */
define('C4M_FEATURES_OG_EVENTS_SORT_BY_START_DATE', "Sort by Start Date");

include_once 'c4m_features_og_events.features.inc';

/**
 * Implementation of hook_search_api_sorts_get_default_sort_alter()
 * Courtesy of https://www.drupal.org/node/1894502
 *
 * Unfortunately search_api_sorts module provides one sort block and not a
 * block per view, so we need to alter some stuff. Here the default sort.
 *
 * @param $default_sort
 * @param $search_sorts
 * @param $keys
 */
function c4m_features_og_events_search_api_sorts_get_default_sort_alter (&$default_sort, $search_sorts, $keys) {
  // Change default sort into 'Sort by Start Date' for events overviews.
  if ( FALSE === strpos(current_path(), 'events', 0)) {
    return;
  }
  $default_sort = $default_sort;
  foreach($search_sorts as $search_sort) {
    if (C4M_FEATURES_OG_EVENTS_SORT_BY_START_DATE === $search_sort->name) {
      $default_sort = $search_sort;
      break;
    }
  }
}

/**
 * Implements custom hook_search_api_sorts_alter().
 * See Class c4m_views_handler_area_search_api_sorts.
 *
 * Unfortunately search_api_sorts module provides one sort block and not a
 * block per view, so we need to alter some stuff. Here we remove superfluous
 * sorts and give ours a new name.
 *
 * @param $block
 */
function c4m_features_og_events_search_api_sorts_alter(&$block, $view) {
  // Remove 'Start date' sort if this is not an events overview.
  if (!in_array($view->name, array('c4m_overview_og_events',
      'c4m_overview_og_events_landing'))) {
    foreach($block['content']['#items'] as $key => $item) {
      if (C4M_FEATURES_OG_EVENTS_SORT_BY_START_DATE === $item['#name']) {
        unset($block['content']['#items'][$key]);
        break;
      }
    }
    return;
  }

  foreach($block['content']['#items'] as $key => $item) {
    // Remove all sorts but start date if we are on events overview.
    if (C4M_FEATURES_OG_EVENTS_SORT_BY_START_DATE !== $item['#name']) {
      unset($block['content']['#items'][$key]);
    }
  }
}

/**
 * Implementation of hook_search_api_views_query_alter()
 *
 * We need to alter the search query for the events landing page.
 * The first Views display is only there to have an exposed fulltext search
 * form.
 *
 * We retrieve the search terms from it and manually put it in the search
 * query for the block displays (upcoming and past).
 *
 * @param view $view
 * @param SearchApiViewsQuery $query
 */
function c4m_features_og_events_search_api_views_query_alter(view &$view, SearchApiViewsQuery &$query) {
  if ('c4m_overview_og_events_landing' != $view->name) {
    return;
  }
  $keys = &drupal_static(__FUNCTION__);

  if ('page' === $view->current_display) {
    // The first page display, this is merely to have the exposed form.
    // We save the fulltext search terms in a static variable.
    // We know this view is executed first.
    $keys = $query->getKeys();
  }
  else {
    // We manually put the search term of the exposed form of the Views
    // page display into the block displays. (Upcoming and past blocks.)
    // Otherwise a search query with terms would visually seem to have no
    // effect.
    // We also put it in the third block which overrides the facet links and
    // makes sure we have the correct facet link counts.
    $query->keys($keys);
  }
}

/**
 * Implementation of hook_views_pre_render()
 *
 * On the events landing page, we need ...
 * - a Dummy View page to have an exposed search form block (page) of which we
 * will remove the output here
 * - 2 views blocks: upcoming and past
 * - a dummy views block after the 2 other blocks to overwrite the facets with
 * facet links for ALL events and not just for the latest loaded view
 * (which would be past events). We remove the output of it here.
 *
 * @param $view
 */
function c4m_features_og_events_views_pre_render(&$view) {
  if ('c4m_overview_og_events_landing' != $view->name) {
    return;
  }
  if ('page' == $view->current_display ||
      'block_3' == $view->current_display) {
    // Nullify Views results and total count for the dummy Views displays.
    $view->result = array();
    $view->total_rows = 0;
  }
}


/**
 * Implements hook_block_view_alter().
 *
 * @param $data
 * @param $block
 */
function c4m_features_og_events_block_view_alter(&$data, $block) {
  if ('events' === current_path()) {
    // Override blocks on the events landing page.
    module_load_include('inc', 'c4m_features_og_events', 'includes/c4m_features_og_events_landing.block');
    return _c4m_features_og_events_landing_block_view_alter($data, $block);
  }
}
