<?php

/**
 * Implementation of hook_menu().
 *
 * @param $entity_type
 * @return array
 */
function c4m_features_og_wiki_menu() {
  $items = array();

  $items['wiki'] = array(
    'title' => 'Wiki pages',
    'page callback' => 'c4m_features_og_wiki_wiki',
    'file' => 'includes/c4m_features_og_wiki.inc',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function c4m_features_og_wiki_theme() {
  return array(
    'c4m_features_og_wiki_wiki' => array(
      'variables' => array('content' => NULL),
      'file'      => 'includes/c4m_features_og_wiki.theme.inc',
    ),
  );
}
/**
 * Implements hook_block_view_MODULE_DELTA_alter().
 *
 * No title for the group menu.
 */
function c4m_features_og_wiki_block_view_menu_c4m_og_menu_alter(&$data, $block) {
  $group = c4m_og_current_group();
  if (!isset($group->book)) {
    return;
  }
  $book = $group->book;
  drupal_static_reset('_menu_build_tree');
  $tree = menu_build_tree($book['menu_name']);

  $tree = menu_tree_output($tree);

  if (empty($tree)) {
    return;
  }

  // Retrieve the 0 level link only.
  $wiki = array_shift($tree);

  // Fix the theme hook suggestions.
  // We're making sure that for theming of these links
  // hook menu_link__book_c4m_og_menu__ is used, so
  // kapablo_menu_link__book_c4m_og_menu will be
  // called. If we do not alter the theme suggestion on the link
  // hook_menu_link will be used and this is a too generic hook for our
  // purposes. (Currently in that case bootstrap_menu_link() would be called in
  // that case.)

  if (!empty($wiki['#below']) &&
    is_array($wiki['#below'])) {
    foreach($wiki['#below'] as $key => $element) {
      if (isset($element['#theme'])) {
        $wiki['#below'][$key]['#theme']  = 'menu_link__book_c4m_og_menu__';
      }
    }
  }
  else {
    // If there are no children, set path and class.
    $wiki['#href'] = 'wiki';
    $wiki['#attributes']['class'][] = 'no-children';
  }

  // Set our custom title for the WIKI link.
  $wiki['#title'] = t('Wiki');

  // Set a custom class for the WIKI link for easy theming.
  $wiki['#attributes']['class'][] = 'wiki';

  // Consider the wiki link in active trail if wiki is in current path.
  if (FALSE !== strpos(drupal_get_path_alias(), 'wiki', 0)) {
    $wiki['#attributes']['class'][] = 'active-trail';
  }

  $first_value = array_shift($data['content']);
  // Use same theming function for our link as for the other OG links.
  $wiki['#theme'] = $first_value['#theme'];
  array_unshift($data['content'], $wiki);
  array_unshift($data['content'], $first_value);
}
